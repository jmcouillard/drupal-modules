<?php

// required_once("jmcouillard_manager_config_form.inc");

global $managed;

function jmcouillard_manager_init() {

	// if(!path_is_admin(current_path()))
	// return;

	global $managed;
	$managed = array();

	$jmcouillard_manager_content = array();
	$jmcouillard_manager_content["node"] = variable_get('jmcouillard_manager_type', array());
	$jmcouillard_manager_content["taxonomy_term"] = variable_get('jmcouillard_manager_voc', array());
	$jmcouillard_manager_subcategory_field = variable_get('jmcouillard_manager_subcategory_field', array());
	$jmcouillard_manager_weight_field = variable_get('jmcouillard_manager_weight_field', array());
	$jmcouillard_manager_image_field = variable_get('jmcouillard_manager_image_field', array());
	$jmcouillard_manager_image_field_fallback = variable_get('jmcouillard_manager_image_field_fallback', array());
	$jmcouillard_manager_extra_columns = variable_get('jmcouillard_manager_extra_columns', array());

	// Process each entry (nodes and taxonomy)
	foreach ($jmcouillard_manager_content as $type => $content) {

		foreach ($content as $name => $enabled) {

			if($enabled) {

				// Check if content type has the specified weight field
				$typeFields = field_info_instances($type, $name);
				$hasWeightField = !empty($jmcouillard_manager_weight_field) && isset($typeFields[$jmcouillard_manager_weight_field]) || $type == "taxonomy_term";
				$hasFirstImageField = isset($typeFields[$jmcouillard_manager_image_field]);
				$hasSubcategoryField = !is_array($jmcouillard_manager_subcategory_field) && isset($typeFields[$jmcouillard_manager_subcategory_field]);

				// Save type to global variable
				$managed[$name] = array(
					"sortable" => $hasWeightField,
					"subcategories" => $hasSubcategoryField,
					"subcategoryField" => $jmcouillard_manager_subcategory_field,
					"deletable" => TRUE,
					"type" => $type,
					"form" => NULL,
					"extraColumns" => array(),
					"imageField" => $hasFirstImageField ? $jmcouillard_manager_image_field : $jmcouillard_manager_image_field_fallback,
				);

				// Extra columns
				foreach ($jmcouillard_manager_extra_columns as $extraFieldName => $value) {
					if(strcmp($extraFieldName, $value) == 0 &&  isset($typeFields[$value])) {
						$managed[$name]["extraColumns"][] =  $value;
					}
				}

				// Sorting exception
				if($hasWeightField || $type == "taxonomy_term") {
					$managed[$name]["order"] = "w." . $jmcouillard_manager_weight_field . "_value ASC";
				}
			}
		}
	}

	// Get forms listing
	$modulePath = drupal_get_path("module", "jmcouillard_manager");
	$forms = file_scan_directory($modulePath . "/custom_forms", '/.*\.inc$/');
	foreach ($forms as $key => $formItem) {
		$formId = $formItem->name;
		$formFilename = $formItem->filename;
		$name = variable_get('jmcouillard_manager_form_' . $formId, NULL);
		if(!is_null($name) && $name!=-1) {
			$managed[$name]["form"] = $formFilename;
		} else {
			$managed["#custom"][] = $formFilename;
		}
	}
}

/**
 * Implementation of hook_block_info().
 */
function jmcouillard_manager_block_info() {

	$blocks['jmcouillard_manager_link'] = array(
		'info' => t('Manager link'),
		'cache' => DRUPAL_CACHE_GLOBAL
	);

	return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function jmcouillard_manager_block_view($delta = '') {

	global $types;

	// Generate manager link module
	$block = array();
	$modulePath = base_path() . drupal_get_path('module', 'jmcouillard_manager');

	switch ($delta) {
		case 'jmcouillard_manager_link' :
			if(user_access('jmcouillard manager')) {
				$block['subject'] = '';
				$block['content'] = array(
					'#type' => 'markup',
					'#markup' => '<div id="manager-link" style="position:fixed;top:100px;left:0px;z-index:100;"><a style="float:left;clear:left;" href="' . url("admin/content/manager", array('alias' => TRUE)) . '"><img src="' . $modulePath . '/images/jmcouillard-manager-link.png"/></a><a style="float:left;clear:left;" href="' . url("user/logout") . '"><img src="' . $modulePath . '/images/jmcouillard-manager-logout.png"/></a></div>',
				);
			};
			break;
	}
	return $block;
}

/**
 * Implementation of hook_menu().
 */
function jmcouillard_manager_menu() {

	global $managed;
	if(!isset($managed)) $managed = array();

	$subcategoryVocabulary = variable_get('jmcouillard_manager_subcategory_vocabulary', -1);

	if($subcategoryVocabulary != -1) {
		$vid = (taxonomy_vocabulary_machine_name_load($subcategoryVocabulary)->vid);
		$subcategoryTerms = taxonomy_get_tree($vid);
	}

	// Default page
	$items['admin/content/manager'] = array(
		'title' => 'Manager',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('jmcouillard_manager_form'),
		'type' => MENU_NORMAL_ITEM,
		'access arguments' => array('jmcouillard manager'),
		'file' => 'jmcouillard_manager_form.inc',
	);

	// Orphean custom forms
	if(isset($managed["#custom"])) {

		foreach ($managed["#custom"] as $filename) {
			$explodedFilename = explode(".", $filename);
			$simpleFilename = array_shift($explodedFilename);
			$items['admin/content/manager/edit/' . $simpleFilename] = array(
				'title' => ucfirst($simpleFilename),
				'page callback' => 'drupal_get_form',
				'page arguments' => array('jmcouillard_manager_custom_form'),
				'type' => MENU_LOCAL_TASK,
				'access arguments' => array('jmcouillard manager'),
				'file' => 'custom_forms/' . $filename,
			);
		}

		unset($managed["#custom"]);
	}

	// Create listing pages
	foreach ($managed as $name => $data) {

		$items['admin/content/manager/' . $name] = array(
			'title' => ($data["type"] == "node") ?                 node_type_load($name)->name :                 taxonomy_vocabulary_machine_name_load($name)->name,
			'page callback' => 'drupal_get_form',
			'page arguments' => array(
				'jmcouillard_manager_form',
				$data["type"],
				$name
			),
			'type' => MENU_LOCAL_TASK,
			'access arguments' => array('jmcouillard manager'),
			'file' => 'jmcouillard_manager_form.inc',
		);

		// Subcategories
		if($data["subcategories"]) {

			$items['admin/content/manager/' . $name . '/all'] = array(
				'title' => "All items",
				'page callback' => 'drupal_get_form',
				'page arguments' => array(
					'jmcouillard_manager_form',
					$data["type"],
					$name
				),
				'type' => MENU_DEFAULT_LOCAL_TASK,
				'access arguments' => array('jmcouillard manager'),
				'file' => 'jmcouillard_manager_form.inc',
				'tab_parent' => 'admin/content/manager/' . $name,
			);

			// Create subcategory
			if(isset($subcategoryTerms)) {
				foreach ($subcategoryTerms as $key => $subcategory) {

					$items['admin/content/manager/' . $name . '/' . $subcategory->tid] = array(
						'title' => $subcategory->name,
						'page callback' => 'drupal_get_form',
						'page arguments' => array(
							'jmcouillard_manager_form',
							$data["type"],
							$name,
							$subcategory->tid
						),
						'type' => MENU_LOCAL_TASK,
						'access arguments' => array('jmcouillard manager'),
						'file' => 'jmcouillard_manager_form.inc',
						'tab_parent' => 'admin/content/manager/' . $name,
					);
				}
			}
		}

		// Create custom forms
		if($data["form"] != "") {

			$type = $data["type"];
			$filename = $data["form"];

			$items['admin/content/manager/edit/' . $name . '/%'] = array(
				'title' => 'Manage ' . $name,
				'page callback' => 'drupal_get_form',
				'page arguments' => array(
					'jmcouillard_manager_custom_form',
					4,
					5
				),
				'type' => MENU_NORMAL_ITEM,
				'access arguments' => array('jmcouillard manager'),
				'file' => 'custom_forms/' . $filename,
			);

			$items['admin/content/manager/add/' . $name] = array(
				'title' => 'Manage ' . $name,
				'page callback' => 'drupal_get_form',
				'page arguments' => array(
					'jmcouillard_manager_custom_form',
					4
				),
				'type' => MENU_NORMAL_ITEM,
				'access arguments' => array('jmcouillard manager'),
				'file' => 'custom_forms/' . $filename,
			);
		}
	}

	// Configuration page
	$items['admin/config/administration/manager'] = array(
		'title' => 'Manager configuration',
		'description' => 'Configuration for Private nodes module',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('jmcouillard_manager_config_form'),
		'access arguments' => array('access administration pages'),
		'file' => 'jmcouillard_manager_config_form.inc',
		'type' => MENU_NORMAL_ITEM,
	);

	// $items += module_invoke_all('manager_menu');

	return $items;
}

/**
 * Implementation of hook_permission().
 */
function jmcouillard_manager_permission() {
	return array('jmcouillard manager' => array(
			'title' => t('Administer with the manager'),
			'description' => t('Perform administration tasks specific to this website.'),
		), );
}

/**
 * Implementation of hook_theme().
 */
function jmcouillard_manager_theme() {
	return array('jmcouillard_manager_table' => array('render element' => 'element'));
}

/**
 * Implementation of hook_user_login().
 */
function jmcouillard_manager_user_login(&$edit, $account) {
  $edit['redirect'] = 'admin/content/manager';
}

/**
 * Sets shutdown function to perform redirects later.
 */
// function jmcouillard_manager_form_user_login_alter(&$form, &$form_state, $form_id) {
// 	$status = variable_get('login_redirect_status', 0);
// 	if($status !== 0) {
// 		$form['#submit'][] = 'jmcouillard_manager_user_login_submit';
// 	}
// }

function _jmcouillard_manager_categories() {

	$output = array();
	$voc = taxonomy_get_tree(2);

	foreach ($voc as $item) {
		$output[$item->tid] = $item->name;
	};

	return $output;
}

/**
 * Used by custom forms.
 */
function _jmcouillard_manager_attach_form($field_name, $entity_type, $bundle, $entity, &$form, &$form_state, $langcode = NULL) {
	// Set #parents to 'top-level' if it doesn't exist.
	$form += array('#parents' => array());

	// If no language is provided use the default site language.
	$options = array(
		'language' => field_valid_language($langcode),
		'default' => TRUE,
	);

	// Append
	ctools_include('fields');
	$field_instance = field_info_instance($entity_type, $field_name, $bundle);
	$form += (array) ctools_field_invoke_field($field_instance, 'form', $entity_type, $entity, $form, $form_state, $options);
}


/**
 * Used by custom forms.
 */
function _jmcouillard_manager_clean_up_field(&$field, $languages = array(LANGUAGE_NONE)) {

	foreach ($languages as $lang) {
		if(!isset($field[$lang])) {
			// Handle empty fields
			$field = NULL;
		} else if(isset($field[$lang]["value"]) && $field[$lang]["value"] == "") {
			// Handle empty translated fields
			$field = NULL;
		} else {
			// Handle empty multiple items fields
			foreach ($field[$lang] as $key => $item) {
				if(isset($item["fid"]) && $item["fid"] <= 0) {
					$field[$lang][$key] = NULL;
					unset($field[$lang][$key]);
				} else if(isset($field[$lang][0]["value"]) && $field[$lang][0]["value"] == "") {
					$field[$lang][$key] = NULL;
					unset($field[$lang][$key]);
				} else if(isset($item["value"]) && $item["value"] == "") {
					$field[$lang][$key] = NULL;
					unset($field[$lang][$key]);
				} else if(!is_array($item)) {
					$field[$lang][$key] = NULL;
					unset($field[$lang][$key]);
				}
			}
			usort($field[$lang], '_jmcouillard_manager_sort_objects_by_weight');
		}
	}

	return $field;
}

/**
 * Used by custom forms.
 */
function _jmcouillard_manager_sort_objects_by_weight($a, $b) {

	// Check if array
	if(!isset($a["_weight"]) || !isset($b["_weight"])) return 0;

	// Compare and return
	if($a["_weight"] == $b["_weight"]) return 0;
	else return ($a["_weight"] < $b["_weight"]) ? -1 : 1;
}
?>